// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_portfolio.Data.DataContext;

#nullable disable

namespace api_portfolio.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231102210911_relation_entities_user_project")]
    partial class relation_entities_user_project
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("api_portafolio.Entities.Cards.Card", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Enlace")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("api_portafolio.Entities.Projects.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Technology_used")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("api_portafolio.Entities.Skills.SoftSkills.SoftSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Soft_skill")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Softskills");
                });

            modelBuilder.Entity("api_portafolio.Entities.Skills.TechnicalSkills.Technology", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Technical_skill")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("api_portafolio.Entities.Skills.Users_SoftSkills.User_SoftSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("SoftSkillsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SoftSkillsId");

                    b.HasIndex("UsersId");

                    b.ToTable("Users_SoftSkills");
                });

            modelBuilder.Entity("api_portafolio.Entities.Skills.Users_TechnicalSkills.User_TechnicalSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("TechnologysId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TechnologysId");

                    b.HasIndex("UsersId");

                    b.ToTable("User_TechnicalSkill");
                });

            modelBuilder.Entity("api_portafolio.Entities.TechnologiesCatalog.Projects_technologiesCatalog.Project_technologyCatalog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TechnologiesCatalogId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectsId");

                    b.HasIndex("TechnologiesCatalogId");

                    b.ToTable("Projects_TechnologiesCatalog");
                });

            modelBuilder.Entity("api_portafolio.Entities.TechnologiesCatalog.TechnologyCatalog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Project_technology")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("technologiesCatalog");
                });

            modelBuilder.Entity("api_portafolio.Entities.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Curriculum")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Profesion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Profile_photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api_portafolio.Entities.Cards.Card", b =>
                {
                    b.HasOne("api_portafolio.Entities.Users.User", null)
                        .WithMany("Cards")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("api_portafolio.Entities.Projects.Project", b =>
                {
                    b.HasOne("api_portafolio.Entities.Users.User", null)
                        .WithMany("Projects")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("api_portafolio.Entities.Skills.Users_SoftSkills.User_SoftSkill", b =>
                {
                    b.HasOne("api_portafolio.Entities.Skills.SoftSkills.SoftSkill", "SoftSkills")
                        .WithMany()
                        .HasForeignKey("SoftSkillsId");

                    b.HasOne("api_portafolio.Entities.Users.User", "Users")
                        .WithMany("User_SoftSkills")
                        .HasForeignKey("UsersId");

                    b.Navigation("SoftSkills");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("api_portafolio.Entities.Skills.Users_TechnicalSkills.User_TechnicalSkill", b =>
                {
                    b.HasOne("api_portafolio.Entities.Skills.TechnicalSkills.Technology", "Technologys")
                        .WithMany()
                        .HasForeignKey("TechnologysId");

                    b.HasOne("api_portafolio.Entities.Users.User", "Users")
                        .WithMany("User_TechnicalSkills")
                        .HasForeignKey("UsersId");

                    b.Navigation("Technologys");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("api_portafolio.Entities.TechnologiesCatalog.Projects_technologiesCatalog.Project_technologyCatalog", b =>
                {
                    b.HasOne("api_portafolio.Entities.Projects.Project", "Projects")
                        .WithMany("Projects_TechnologiesCatalogs")
                        .HasForeignKey("ProjectsId");

                    b.HasOne("api_portafolio.Entities.TechnologiesCatalog.TechnologyCatalog", "TechnologiesCatalog")
                        .WithMany("Projects_TechnologiesCatalogs")
                        .HasForeignKey("TechnologiesCatalogId");

                    b.Navigation("Projects");

                    b.Navigation("TechnologiesCatalog");
                });

            modelBuilder.Entity("api_portafolio.Entities.Projects.Project", b =>
                {
                    b.Navigation("Projects_TechnologiesCatalogs");
                });

            modelBuilder.Entity("api_portafolio.Entities.TechnologiesCatalog.TechnologyCatalog", b =>
                {
                    b.Navigation("Projects_TechnologiesCatalogs");
                });

            modelBuilder.Entity("api_portafolio.Entities.Users.User", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Projects");

                    b.Navigation("User_SoftSkills");

                    b.Navigation("User_TechnicalSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
